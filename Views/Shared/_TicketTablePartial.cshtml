@model IEnumerable<AstraBugTracker.Models.Ticket>
@using AstraBugTracker.Services.Interfaces;
@using AstraBugTracker.Models.Enums
@inject IBTFileService _FileService;



<div class="col-xl-12 col-lg-12 col-sm-12  layout-spacing">
    <div class="widget-content widget-content-area br-8">
        <table id="zero-config" class="table dt-table-hover" style="width:100%">
            <thead>
                <tr>
                    <th class="no-content"></th>
                    <th class="text-center"> @Html.DisplayNameFor(model => model.Title) </th>
                    <th>Assigned To</th>
                    <th>@Html.DisplayNameFor(model => model.Created)</th>
                    <th>@Html.DisplayNameFor(model => model.TicketType)</th>
                    <th>@Html.DisplayNameFor(model => model.TicketPriority)</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-center">  <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Details</a></td>
                        <td class="text-center"> @Html.DisplayFor(modelItem => item.Title)</td>
                        <td>
                            @if (item.DeveloperUser != null)
                            {
                                <div class="avatar avatar-sm m-0">
                                    <span><img src="@_FileService.ConvertByteArrayToFile(item.DeveloperUser!.ImageFileData!, item.DeveloperUser!.ImageFileType!,(int)DefaultImage.BTUserImage)" class="rounded-circle" alt="avatar"></span>
                                    <strong>@item.DeveloperUser.FullName</strong>
                                </div>
                            }
                            else
                            {
                                <strong>Unassigned</strong>
                            }
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Created)</td>
                        <td>
                            @if (item.TicketType!.Name == nameof(BTTicketTypes.WorkTask))
                            {
                                <span class="shadow-none badge badge-secondary">@Html.DisplayFor(modelItem => item.TicketType!.Name)</span>
                            }
                            @if (item.TicketType!.Name == nameof(BTTicketTypes.GeneralTask))
                            {
                                <span class="shadow-none badge badge-primary">@Html.DisplayFor(modelItem => item.TicketType!.Name)</span>
                            }
                            @if (item.TicketType!.Name == nameof(BTTicketTypes.Defect))
                            {
                                <span class="shadow-none badge badge-danger">@Html.DisplayFor(modelItem => item.TicketType!.Name)</span>
                            }
                            @if (item.TicketType!.Name == nameof(BTTicketTypes.Enhancement))
                            {
                                <span class="shadow-none badge badge-dark">@Html.DisplayFor(modelItem => item.TicketType!.Name)</span>
                            }
                            @if (item.TicketType!.Name == nameof(BTTicketTypes.NewDevelopment))
                            {
                                <span class="shadow-none badge badge-info">@Html.DisplayFor(modelItem => item.TicketType!.Name)</span>
                            }
                            @if (item.TicketType!.Name == nameof(BTTicketTypes.ChangeRequest))
                            {
                                <span class="shadow-none badge badge-warning">@Html.DisplayFor(modelItem => item.TicketType!.Name)</span>
                            }
                        </td>

                        <td>
                            @if (item.TicketPriority!.Name == nameof(BTTicketPriorities.Urgent))
                            {
                                <span class="shadow-none badge badge-danger">@Html.DisplayFor(modelItem => item.TicketPriority!.Name)</span>
                            }
                            @if (item.TicketPriority!.Name == nameof(BTTicketPriorities.High))
                            {
                                <span class="shadow-none badge badge-warning">@Html.DisplayFor(modelItem => item.TicketPriority!.Name)</span>
                            }
                            @if (item.TicketPriority!.Name == nameof(BTTicketPriorities.Medium))
                            {
                                <span class="shadow-none badge badge-secondary">@Html.DisplayFor(modelItem => item.TicketPriority!.Name)</span>
                            }
                            @if (item.TicketPriority!.Name == nameof(BTTicketPriorities.Low))
                            {
                                <span class="shadow-none badge badge-primary">@Html.DisplayFor(modelItem => item.TicketPriority!.Name)</span>
                            }
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<script src="~/src/plugins/src/global/vendors.min.js"></script>
<script src="~/src/plugins/src/table/datatable/datatables.js"></script>

<script>
    $('#zero-config').DataTable({
        "dom": "<'dt--top-section'<'row'<'col-12 col-sm-6 d-flex justify-content-sm-start justify-content-center'l><'col-12 col-sm-6 d-flex justify-content-sm-end justify-content-center mt-sm-0 mt-3'f>>>" +
            "<'table-responsive'tr>" +
            "<'dt--bottom-section d-sm-flex justify-content-sm-between text-center'<'dt--pages-count  mb-sm-0 mb-3'i><'dt--pagination'p>>",
        "oLanguage": {
            "oPaginate": { "sPrevious": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>', "sNext": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-right"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>' },
            "sInfo": "Showing page _PAGE_ of _PAGES_",
            "sSearch": '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>',
            "sSearchPlaceholder": "Search...",
            "sLengthMenu": "Results :  _MENU_",
        },
        "stripeClasses": [],
        "lengthMenu": [7, 10, 20, 50],
        "pageLength": 10
    });
</script>
<!-- END PAGE LEVEL SCRIPTS -->